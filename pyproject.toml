[project]
name = "charmonium.freeze"
version = "0.8.5"
description = "Injectively, deterministically maps arbitrary objects to hashable values"
readme = "README.rst"
license = "MIT"
keywords = ["hash"]
classifiers = [
	"Operating System :: OS Independent",
	"Typing :: Typed",
	"Natural Language :: English",
	"Development Status :: 4 - Beta",
	"Intended Audience :: Developers",
	"Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = []

[[project.authors]]
name = "Samuel Grayson"
email = "sam+dev@samgrayson.me"

[project.urls]
# https://packaging.python.org/en/latest/specifications/well-known-project-urls/#well-known-labels
source = "https://github.com/charmoniumQ/charmonium.freeze"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["charmonium"]

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
addopts = "--quiet --numprocesses=0 --doctest-modules --benchmark-disable --durations=20"
# pytest --benchmark-enable --benchmark-storage=build/benchmark --benchmark-only --numprocesses 0

[tool.coverage.run]
branch = true
data_file = "build/.coverage"

[tool.coverage.html]
directory = "build/htmlcov"

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    'pragma: no cover',
    'def __repr__',
    'if self\.debug',
    'raise .*Error',
    'if False:',
    'if __name__ == .__main__.:',
	'if TYPE_CHECKING',
    '@(abc\.)?abstractmethod',
    '\w*\.\.\.$',
    '\w*pass$',
]

[tool.mypy]
strict = true
pretty = true
error_summary = true
color_output = true
mypy_path = "stubs"
disable_error_code = "no-redef"

[tool.bump2version]
current_version = "0.8.5"
commit = true
tag = true

[tool.tox]
legacy_tox_ini = """
[tox]
# Unfortunately, matplotlib requires Pillow which doesn't work in pypy38.
envlist = py{39,310,311,312,313},pypy3
# Make sure to install the Python versions listed here in the Nix flake.
isolated_build = True

[testenv]
allowlist_externals = poetry, {env:PWD}/script.py
skip_install = true
commands =
    poetry install
    {toxinidir}/script.py per-env-tests
"""

[dependency-groups]
dev = [
    "black>=25.1.0",
    "coverage>=7.9.2",
    "ipython>=8.18.1",
    "isort>=6.0.1",
    "matplotlib>=3.9.4",
    "mypy>=1.17.0",
    "numpy>=2.0.2",
    "pandas>=2.3.1",
    "pytest>=8.4.1",
    "pytest-benchmark>=5.1.0",
    "pytest-cov>=6.2.1",
    "pytest-xdist>=3.8.0",
    "radon>=6.0.1",
    "requests>=2.32.4",
    "rstcheck>=6.2.5",
    "ruff>=0.12.4",
    "tox>=4.27.0",
    "tqdm>=4.67.1",
]
